# -*- coding: utf-8 -*-
"""Instacart-01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_K5rSYzV4ZAvylQQMnjHHceTT6GC9Mgh
"""

# Commented out IPython magic to ensure Python compatibility.
# Importing Libraries

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from google.colab import drive
drive.mount('/content/drive/')

# %cd 'drive/MyDrive/9-Projects/1-ML-Instacart'
# %ls

aisle = pd.read_csv("aisles.csv")
departments = pd.read_csv("departments.csv")
orders = pd.read_csv("orders.csv")
products = pd.read_csv("products.csv")
order_products_prior = pd.read_csv("order_products__prior.csv")
order_products_train = pd.read_csv("order_products__train.csv")

print("aisle: ",aisle.shape)
print("departments: " ,departments.shape)
print("orders: ",orders.shape)
print("products: ",products.shape)
print("order_products_prior: ",order_products_prior.shape)
print("order_products_train: ",order_products_train.shape)

"""Checking the ratio of reorders to not reorders in the training data set"""

total_training_samples = order_products_prior.shape[0]
print('Total training samples =', total_training_samples)

prior_1_count = order_products_prior.loc[order_products_prior['reordered']==1].shape[0]
print('Number of reorders in trainging dataset =', prior_1_count)

prior_0_count = order_products_prior.loc[order_products_prior['reordered']==0].shape[0]
print('Number of NOT reorders in trainging dataset =', prior_0_count)

percentage_of_reorders = (prior_1_count/total_training_samples)*100
percentage_of_not_reorders = (prior_0_count/total_training_samples)*100

print('\nTraining Data')
print('Reorder percentage =', percentage_of_reorders, '%')
print('Not Reorder percentage =', percentage_of_not_reorders, '%')



orders

"""Removing eval_set column from orders data"""

orders = orders.drop('eval_set', axis=1)

order_products_train = order_products_train.merge(orders, on='order_id')
order_products_train

order_products_prior = order_products_prior.merge(orders, on='order_id')
order_products_prior

order_products_prior.loc[order_products_prior['reordered']==1]

order_products_prior.loc[order_products_prior['reordered']==0]